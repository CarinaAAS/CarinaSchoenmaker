install.packages("devtools")
devtools::install_github("franciscorichter/dmea")

library(dmea)

rm(list = ls())

ct=5
sumt = 0
model = 'bt'

beta_r = 0.5    #dependency parameter of predators
mu_r0 = 0.05    #constant
lambda_y0 = 0.5 #constant
gamma_y = 0.05  #dependency parameter of prey

x_r = 1 # nr. of predators
x_y = 1  # nr. of prey

WT = c(0) # waiting time
SE = c()  # speciation = 1, extinction = 0
BT = c(0) # branching time, sum of waiting times
L_vector = c() # vector that shows what kind of event takes place (sp/ex of predators/prey)
x_r_vector = c(1) # nr. of predators at every wt
x_y_vector = c(1) # nr. of prey at every wt

reboot = 0


while(sumt < ct){
  #update parameter
  if(model == 'bt'){
    lambda_r = beta_r*x_y
    mu_r = mu_r0
    lambda_y = lambda_y0
    mu_y = gamma_y*x_r 
  }
   s  = lambda_r + mu_r + lambda_y + mu_y
   wt = rexp(n = 1,rate = s) # waiting time is exponentially distributed

   vector_rates = c(rep(lambda_r,x_r),rep(mu_r,x_r),rep(lambda_y,x_y),rep(mu_y,x_y))
   BD = rmultinom(1,1,vector_rates/s) # event: birth/death, multinomially distributed
  L = which(BD == 1)
  L_vector = append(L_vector, L)
  
  # find out where the 1 in rmultinom occurs, so where does the event occur before/on N (speciation) or after (extinction)
  # speciation of predators (x_r)
  if(L <= x_r){
    # update tree  
    x_r= x_r+1
    SE = append(SE,1)
    x_r_vector = append(x_r_vector,x_r)
    x_y_vector = append(x_y_vector,x_y)
  }
  # extinction of predators (x_r)
  if (x_r< L & L <= (2*x_r)) {
    
    x_r = x_r-1           
    SE = append(SE,0)
    x_r_vector = append(x_r_vector,x_r)
    x_y_vector = append(x_y_vector,x_y)
  }
  #speciation of prey (x_y)
  if ((2*x_r)< L & L <= (2*x_r+x_y)) {
    x_y= x_y+1
    SE = append(SE,1)
     x_r_vector = append(x_r_vector,x_r)
     x_y_vector = append(x_y_vector,x_y)
   
  }
  #extinction of prey (x_y)
  if ((2*x_r+x_y) < L) {
    x_y = x_y-1           
    SE = append(SE,0)
    x_r_vector = append(x_r_vector,x_r)
    x_y_vector = append(x_y_vector,x_y)
  }
  
  WT = append(WT, wt)
  sumt = sum(WT)
  BT = append(BT, sumt)


  # if the nr. of predators or prey bevome 0, the tree should reboot, so all the vectors are emptied
if (x_r == 0) {
  reboot = reboot + 1
  x_r = 1
  x_y = 1
  WT = c(0)
  SE = c()
  BT = c(0)
  L_vector = c()
  x_r_vector = c(1)
  x_y_vector = c(1)
}

if (x_y == 0) {
  reboot = reboot + 1
  x_r = 1
  x_y = 1
  WT = c(0)
  SE = c()
  BT = c(0)
  L_vector = c()
  x_r_vector = c(1)
  x_y_vector = c(1)
}
}

p = list(wt=WT,E=SE)
p2 = p2phylo(p)
plot(p2)
axisPhylo(backward = F)

plot(BT,  x_r_vector, col='red')
par(new=TRUE)
plot(BT, x_y_vector, col='green')
